[module generateElement('http://www.eclipse.org/emf/2002/Ecore')]

[import soft::generator::common::generateCommon/]

[query public getImplementedOperations( aClass : EClass ) : Collection(EOperation) = 
	let classExtend : EClass = aClass.getClassExtendsClass() in
	if classExtend.oclIsUndefined() then 
		aClass.eAllOperations 
	else 
		aClass.eAllOperations - classExtend.eAllOperations 
	endif
/]

[query public getImplementedFeatures( aClass : EClass ) : Collection(EStructuralFeature) =
	let classExtend : EClass = aClass.getClassExtendsClass() in
	if classExtend.oclIsUndefined() then 
		aClass.eAllStructuralFeatures 
	else 
		aClass.eAllStructuralFeatures - classExtend.eAllStructuralFeatures 
	endif
 /]

[query public getReferencedTypes(aOperation : EOperation) : Set(EClassifier) =
    if aOperation.eGenericType.oclIsUndefined() then
        OrderedSet {
            OrderedSet { aOperation.eType },
            aOperation.eParameters.eType
        }->flatten()
    else
        OrderedSet {
            OrderedSet { aOperation.eType , aOperation.eGenericType.eClassifier },
            aOperation.eParameters.eType
        }->flatten()
    endif  
/]

[query public getReferencedTypes(aClass : EClass) : Set(EClassifier) = 
    OrderedSet{aClass.eSuperTypes
              ,aClass.getImplementedFeatures().eType
              ,aClass.getImplementedOperations().getReferencedTypes()}->flatten()->select( cls | not cls.oclIsUndefined() ) /]

[query public requiresList(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'EEList' endif/]
[query public requiresList(aClass : EClass) : Boolean = aClass.getImplementedFeatures()->exists(isListType()) or aClass.getImplementedOperations()->exists((eType.requiresList()  or isListType())) /]
[query public requiresCollectionView(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'ETreeIterator' endif/]
[query public requiresCollectionView(anGenericType : EGenericType) : Boolean = if (oclIsUndefined()) then false else anGenericType.eClassifier.requiresCollectionView() endif/]
[query public requiresResource(anEClassifier : EClassifier) : Boolean = if (oclIsUndefined()) then false else name = 'EResource' endif/]
[query public requiresResource(anGenericType : EGenericType) : Boolean = if (oclIsUndefined()) then false else anGenericType.eClassifier.requiresResource() endif/]

