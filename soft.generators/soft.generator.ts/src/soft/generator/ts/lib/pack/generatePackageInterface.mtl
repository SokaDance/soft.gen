[comment encoding = UTF-8 /]
[module generatePackageInterface('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::common::generateUtils/]
[import soft::generator::ts::generateCommon /]
[import soft::generator::ts::lib::pack::generateCommon/]

[template private generateGetter(anENamedElement : ENamedElement, aPackage : EPackage )]

// Returns the meta object for the [anENamedElement.name.toUpperFirst()/]
[anENamedElement.getReflectiveGetterName()/]() : [getShortQualifiedName(anENamedElement.eClass().getQualifiedInterfaceName(),aPackage.name)/];
[/template]

[template public generatePackageInterface(anEPackage : EPackage) {className : String = anEPackage.getInterfaceName();}]
[file (anEPackage.getOutputDirectory() + '/'+  anEPackage.getInterfaceFileName(anEPackage.getPackageName() ) , false, 'UTF-8')]
[fileComment()/]

[let allTypes : OrderedSet(String) = OrderedSet{'ecore.EAttribute' 
                                               ,'ecore.EReference'
                                               ,'ecore.EClass'
                                               ,'ecore.EEnum'
                                               ,'ecore.EOperation' 
                                               ,'ecore.EDataType'
                                               ,'ecore.EPackage' 
                                               , anEPackage.name + '.' + anEPackage.getImplementationName()}->sortedBy(s | s)]
[generateImports(allTypes,className,anEPackage)/]
[/let]

export interface [className/] extends [getShortQualifiedName('ecore.EPackage', anEPackage.name)/] {
[for (aClass : EClass | anEPackage.eAllContents(EClass)->asOrderedSet()->sortedBy(name))]
    [aClass.generateGetter(anEPackage)/]
    [aClass.eAttributes->sortedBy(name).generateGetter(anEPackage)/]
    [aClass.eReferences->sortedBy(name).generateGetter(anEPackage)/]
    [aClass.eOperations->sortedBy(name).generateGetter(anEPackage)/]
[/for]
    [anEPackage.eAllContents(EDataType)->sortedBy(name).generateGetter(anEPackage)/]
}

export function get[className/]() : [className/] {
    return [anEPackage.getImplementationName()/].getInstance();
}


[/file]
[/template]
