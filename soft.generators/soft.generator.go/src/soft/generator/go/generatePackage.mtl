[**
 * This file is part of soft.generator.go, a project for go code 
 * generation of an ecore model
 *
 * Copyright(c) 2021 MASA Group
 *	
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
**/]

[comment encoding = UTF-8 /]
[module generatePackage('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::common::generateCommon/]
[import soft::generator::common::generateUtils/]
[import soft::generator::go::generateCommon/]
[import soft::generator::go::generateType/]

[query private getPackagePaths(aPackage : EPackage) : OclAny =
	let packageToPaths : OclAny = mapNew('getPackageToPaths_' + aPackage.name) in
    let packagesProperty : OclAny = getProperty('packages') in 
	let packages : String = (if packagesProperty.oclIsUndefined() or packagesProperty = '' then '' else packagesProperty.oclAsType(String) endif) + 
							(if aPackage.hasKey('packages') then ';' + aPackage.valueKey('packages') else '' endif) in
	if packages <> '' then
		let tokenized : Sequence(String) = packages.tokenize('; \r\n') in
        tokenized->iterate( p : String ; res : OclAny = packageToPaths | (
        	let index : Integer = p.index('=') in 
            if index = -1 then
				let packIndex : Integer = p.index('#') in
				let packPath : String = if packIndex = -1 then p else p.substring(1, packIndex-1) endif in
				let nameIndex : Integer = packPath.lastIndexOf('/') in
				if nameIndex = -1 then
					res
				else
					res.mapPut('name:' +packPath.substring(nameIndex+1),p)
				endif
            else
                res.mapPut('uri:'+p.substring(1,index-1),p.substring(index+1)) 
            endif
		))
    else
        packageToPaths
    endif
/]