[comment encoding = UTF-8 /]
[module generateOperation('http://www.eclipse.org/emf/2002/Ecore')/]

[import soft::generator::go::generateCommon/]
[import soft::generator::go::generateType/]
[import soft::generator::go::lib::generateCommon/]

[template public generateDeclaration(anEOperation : EOperation)]
[anEOperation.getOperationName()/]([anEOperation.generateParameterList(false)/]) [anEOperation.generateType()/]

[/template]

[query public isDefault(anEOperation : EOperation ) : Boolean = not anEOperation.hasKey('default') or ( anEOperation.hasKey('default') and anEOperation.valueKey('default') = 'true' )/]

[template public generateImplementation(anEOperation : EOperation, aClass : EClass ) ? (not anEOperation.isDefault() )]
[/template]

[template public generateImplementation(anEOperation : EOperation, aClass : EClass ) ? ( anEOperation.isDefault() )]
// [anEOperation.getOperationName()/] default implementation
[aClass.generateFunctionImplementationReceiver()/] [anEOperation.getOperationName()/]([anEOperation.generateParameterList(false)/]) [anEOperation.generateType()/] {
    panic("[anEOperation.getOperationName()/] not implemented")
}

[/template]

[template public generateMock(anEOperation : EOperation, aClass : EClass) ? (anEOperation.oclIsUndefined() or anEOperation.eGenericType.oclIsUndefined())]
// [anEOperation.getOperationName()/] provides mock implementation
[aClass.generateFunctionMockReceiver()/] [anEOperation.getOperationName()/]([anEOperation.generateParameterList(true)/]) [anEOperation.generateType()/] {
	[aClass.getReceiverName()/].Called([anEOperation.generateParameterCall()/])
}


[/template]

[template public generateMock(anEOperation : EOperation, aClass : EClass) ? (not (anEOperation.oclIsUndefined() or anEOperation.eGenericType.oclIsUndefined()))]
// [anEOperation.getOperationName()/] provides mock implementation
[aClass.generateFunctionMockReceiver()/] [anEOperation.getOperationName()/]([anEOperation.generateParameterList(true)/]) [anEOperation.generateType()/] {
	ret := [aClass.getReceiverName()/].Called([anEOperation.generateParameterCall()/])

	var r [anEOperation.generateType()/]
	if rf, ok := ret.Get(0).(func() [anEOperation.generateType()/]); ok {
		r = rf()
	} else {
		if ret.Get(0) != nil {
			r = ret.Get(0).([anEOperation.generateType()/])
		}
	}

	return r
}


[/template]

